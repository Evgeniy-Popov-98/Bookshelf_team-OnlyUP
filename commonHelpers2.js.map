{"version":3,"file":"commonHelpers2.js","sources":["../src/images/IMG_9606.png","../src/images/amazon.svg","../src/images/book.svg","../src/images/trash.svg","../src/js/API/storage.js"],"sourcesContent":["export default \"__VITE_ASSET__4fd78ed1__\"","export default \"__VITE_ASSET__614bd757__\"","export default \"__VITE_ASSET__f0c2f45b__\"","export default \"__VITE_ASSET__d53f63a1__\"","import '../NZheader';\nimport { getBooks } from './api-books';\nimport {\n  addItemLocalStorage,\n  infoItemLocalStorage,\n  restoreData,\n  TASKS_KEY,\n} from '../localStorage';\nimport '../switch-button';\nimport img9606 from '/images/IMG_9606.png';\nimport amazonSvg from '/images/amazon.svg';\nimport bookSvg from '/images/book.svg';\nimport trashSvg from '/images/trash.svg';\nimport tuiPagination from 'tui-pagination'; // Імпортуємо бібліотеку пагінації\n\nconst supportSection = document.querySelector('.header-styles');\nif (screen.width < 1440) {\n  console.log(screen.width);\n  supportSection.style.display = 'none';\n} else {\n  supportSection.style.display = 'flex';\n}\n\nconst shoppingListContainer = document.querySelector('.shoppinglist-container');\nconst emptyMessage = `\n    <div class=\"shoppinglist-blocks\">\n        <h2 class=\"text\">This page is empty, add some books and proceed to order.</h2>\n        <img src=\"${img9606}\" alt=\"Shopping Image\" class=\"shoppinglist-img96061\">\n    </div>\n`;\n\nasync function addToShoppingList() {\n  try {\n    const booksIds = infoItemLocalStorage(TASKS_KEY);\n\n    if (!booksIds || !booksIds.length) {\n      shoppingListContainer.innerHTML = emptyMessage;\n      return;\n    }\n\n    let markup = '';\n\n    for (const bookId of booksIds) {\n      const dataBook = await getBooks(bookId.constID);\n      markup += createBookMarkup(dataBook, bookId);\n    }\n\n    shoppingListContainer.innerHTML = markup;\n\n    // Оновлення пагінації після додавання книг\n    // updatePagination();\n  } catch (error) {\n    console.error('Error fetching book data:', error);\n  }\n}\n\nfunction createBookMarkup(book, bookId) {\n  return `\n    <div class=\"container-block\" id=\"${bookId.constID}\">\n        <div class=\"btn-and-links\">\n            <button class=\"trash-btn\"><img src=\"${trashSvg}\" alt=\"\"></button>\n            <ul class=\"links\">\n                <li><img src=\"${amazonSvg}\" class=\"amazon\"></li>\n                <li><img src=\"${bookSvg}\"></li>\n            </ul>\n        </div>\n        <img src=\"${book.book_image}\" alt=\"${book.title}\" class=\"book-image\">\n        <div class=\"text-area\">\n            <h2 class=\"shopping-list-title\">${book.title}</h2>\n            <h2 class=\"shopping-list-title-name\">${book.list_name}</h2>\n            <p class=\"shopping-list-description\">${book.description}</p>\n            <h2 class=\"shopping-list-author\">${book.author}</h2>\n        </div>\n    </div>\n  `;\n}\n\nfunction updatePagination() {\n  // Отримуємо кількість сторінок на основі кількості книг\n  const booksIds = infoItemLocalStorage(TASKS_KEY);\n  const totalPages = Math.ceil(booksIds.length / 4); // По 4 книги на сторінку\n\n  // Ініціалізуємо або оновлюємо пагінацію\n  const pagination = new tuiPagination('pagination', {\n    totalItems: totalPages,\n    itemsPerPage: 1,\n    visiblePages: 5,\n  });\n}\n\nshoppingListContainer.addEventListener('click', function (event) {\n  const target = event.target;\n  if (\n    event.target.parentNode.nodeName === 'BUTTON' ||\n    event.target.nodeName === 'BUTTON'\n  ) {\n    const bookContainer = target.closest('.container-block');\n    const bookId = bookContainer.getAttribute('id');\n    let newArr = [];\n    const dataArr = infoItemLocalStorage(TASKS_KEY);\n    for (const item of dataArr) {\n      if (item.constID !== bookId) {\n        newArr.push(item);\n      }\n    }\n    addItemLocalStorage(TASKS_KEY, newArr);\n\n    bookContainer.remove();\n\n    if (!shoppingListContainer.querySelector('.container-block')) {\n      shoppingListContainer.innerHTML = emptyMessage;\n    }\n\n    // Оновлення пагінації після видалення книги\n    // updatePagination();\n  }\n});\naddToShoppingList();\n"],"names":["img9606","amazonSvg","bookSvg","trashSvg","supportSection","shoppingListContainer","emptyMessage","addToShoppingList","booksIds","infoItemLocalStorage","TASKS_KEY","markup","bookId","dataBook","getBooks","createBookMarkup","error","book","event","target","bookContainer","newArr","dataArr","item","addItemLocalStorage"],"mappings":"gHAAA,MAAeA,EAAA,mDCAAC,EAAA,iDCAAC,EAAA,+CCAAC,EAAA,gDCeTC,EAAiB,SAAS,cAAc,gBAAgB,EAC1D,OAAO,MAAQ,MACjB,QAAQ,IAAI,OAAO,KAAK,EACxBA,EAAe,MAAM,QAAU,QAE/BA,EAAe,MAAM,QAAU,OAGjC,MAAMC,EAAwB,SAAS,cAAc,yBAAyB,EACxEC,EAAe;AAAA;AAAA;AAAA,oBAGDN,CAAO;AAAA;AAAA,EAI3B,eAAeO,GAAoB,CACjC,GAAI,CACF,MAAMC,EAAWC,EAAqBC,CAAS,EAE/C,GAAI,CAACF,GAAY,CAACA,EAAS,OAAQ,CACjCH,EAAsB,UAAYC,EAClC,MACD,CAED,IAAIK,EAAS,GAEb,UAAWC,KAAUJ,EAAU,CAC7B,MAAMK,EAAW,MAAMC,EAASF,EAAO,OAAO,EAC9CD,GAAUI,EAAiBF,EAAUD,CAAM,CAC5C,CAEDP,EAAsB,UAAYM,CAInC,OAAQK,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,CACjD,CACH,CAEA,SAASD,EAAiBE,EAAML,EAAQ,CACtC,MAAO;AAAA,uCAC8BA,EAAO,OAAO;AAAA;AAAA,kDAEHT,CAAQ;AAAA;AAAA,gCAE1BF,CAAS;AAAA,gCACTC,CAAO;AAAA;AAAA;AAAA,oBAGnBe,EAAK,UAAU,UAAUA,EAAK,KAAK;AAAA;AAAA,8CAETA,EAAK,KAAK;AAAA,mDACLA,EAAK,SAAS;AAAA,mDACdA,EAAK,WAAW;AAAA,+CACpBA,EAAK,MAAM;AAAA;AAAA;AAAA,GAI1D,CAeAZ,EAAsB,iBAAiB,QAAS,SAAUa,EAAO,CAC/D,MAAMC,EAASD,EAAM,OACrB,GACEA,EAAM,OAAO,WAAW,WAAa,UACrCA,EAAM,OAAO,WAAa,SAC1B,CACA,MAAME,EAAgBD,EAAO,QAAQ,kBAAkB,EACjDP,EAASQ,EAAc,aAAa,IAAI,EAC9C,IAAIC,EAAS,CAAA,EACb,MAAMC,EAAUb,EAAqBC,CAAS,EAC9C,UAAWa,KAAQD,EACbC,EAAK,UAAYX,GACnBS,EAAO,KAAKE,CAAI,EAGpBC,EAAoBd,EAAWW,CAAM,EAErCD,EAAc,OAAM,EAEff,EAAsB,cAAc,kBAAkB,IACzDA,EAAsB,UAAYC,EAKrC,CACH,CAAC,EACDC,EAAmB"}